/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package views;

import RAF.RAF;
import java.awt.Color;
import java.awt.Font;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import models.Registro;

/**
 *
 * @author Ervin
 */
public class DialogVerRegistro extends javax.swing.JDialog {
    RAF raf = new RAF();
    DefaultTableModel modelo;
    TableColumnModel modeloColumna;
    List<Registro> registros;
    
    /**
     * Creates new form BuscarDialog
     */
    public DialogVerRegistro(java.awt.Frame parent, boolean modal) throws IOException {
        super(parent, modal);
        initComponents();
        
        jtableRegistros.getTableHeader().setFont(new Font("Arial Black",Font.BOLD,14));
        jtableRegistros.getTableHeader().setOpaque(false);
        
        DefaultTableCellRenderer renderizador = new DefaultTableCellRenderer();
        renderizador.setBackground(new Color(32,136,203));
        renderizador.setForeground(new java.awt.Color(255,255,255));
        renderizador.setHorizontalAlignment(JLabel.CENTER);
        DefaultTableCellRenderer renderCelda = new DefaultTableCellRenderer();
        renderCelda.setHorizontalAlignment(JLabel.CENTER);
    
        
        for (int i = 0; i < jtableRegistros.getModel().getColumnCount(); i++) {
            jtableRegistros.getColumnModel().getColumn(i).setHeaderRenderer(renderizador);
            jtableRegistros.getColumnModel().getColumn(i).setCellRenderer(renderCelda);
        }
        
        modelo = (DefaultTableModel) jtableRegistros.getModel();
        registros = raf.vertodo();
        for (int i = 0; i < registros.size(); i++) {
            modelo.addRow(new Object[] {registros.get(i).getCodigo(),
                                        registros.get(i).getPersonaDifunto().getNombres(),
                                        registros.get(i).getPersonaDifunto().getApellidos(),
                                        registros.get(i).getPersonaDifunto().getNoCedula(),
                                        registros.get(i).getPersonaDifunto().getFechaDefuncion(),
                                        registros.get(i).getPersonaResponsable().getNombres(),
                                        registros.get(i).getPersonaResponsable().getApellidos(),
                                        registros.get(i).getPersonaResponsable().getNoCedula(),
                                        registros.get(i).getTierra().getCodigo(),
                                        registros.get(i).getTierra().getPagoSepultura()});
            
        }
        
        jtableRegistros.setModel(modelo);
        
        modeloColumna = jtableRegistros.getColumnModel();
        int tamanio1 =0;
        for (int i = 0; i < modeloColumna.getColumnCount(); i++) {
            for (int j = 0; j < modelo.getRowCount(); j++) {
                if(modelo.getValueAt(j, i)!= null){
                    int tamanio2 = modelo.getValueAt(j, i).toString().length()*14;
                    if(tamanio2>tamanio1){
                        tamanio1=tamanio2;
                    }
                }modeloColumna.getColumn(i).setPreferredWidth(tamanio1);
            }
        }
        
        
        System.out.println(registros.size());
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jCheckBoxMenuItem1 = new javax.swing.JCheckBoxMenuItem();
        jLabel1 = new javax.swing.JLabel();
        btnEliminar = new javax.swing.JButton();
        btnSalir = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtableRegistros = new javax.swing.JTable();
        btnActualizar = new javax.swing.JButton();
        btnGuardarRegistros1 = new javax.swing.JButton();

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jCheckBoxMenuItem1.setSelected(true);
        jCheckBoxMenuItem1.setText("jCheckBoxMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setUndecorated(true);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Captura.PNG"))); // NOI18N
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, 120));

        btnEliminar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnEliminar.setText("Eliminar");
        btnEliminar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        btnEliminar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEliminarActionPerformed(evt);
            }
        });
        getContentPane().add(btnEliminar, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 150, 200, 40));

        btnSalir.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnSalir.setForeground(new java.awt.Color(153, 0, 0));
        btnSalir.setText("SALIR");
        btnSalir.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        btnSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalirActionPerformed(evt);
            }
        });
        getContentPane().add(btnSalir, new org.netbeans.lib.awtextra.AbsoluteConstraints(720, 150, 200, 40));

        jtableRegistros.setFont(new java.awt.Font("Arial Black", 1, 14)); // NOI18N
        jtableRegistros.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "No Pagina", " Difunto", "Apellido", "Cedula", " Defuncion", " Responsable", "Apellido", "Cedula", "Terreno", "Sepultura"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jtableRegistros.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_OFF);
        jtableRegistros.setSelectionBackground(new java.awt.Color(232, 57, 95));
        jtableRegistros.getTableHeader().setReorderingAllowed(false);
        jScrollPane2.setViewportView(jtableRegistros);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 210, 1020, -1));

        btnActualizar.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnActualizar.setText("Actualizar");
        btnActualizar.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        btnActualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnActualizarActionPerformed(evt);
            }
        });
        getContentPane().add(btnActualizar, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 150, 200, 40));

        btnGuardarRegistros1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        btnGuardarRegistros1.setText("Guardar Registros");
        btnGuardarRegistros1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 255)));
        btnGuardarRegistros1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGuardarRegistros1ActionPerformed(evt);
            }
        });
        getContentPane().add(btnGuardarRegistros1, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 150, 200, 40));

        setSize(new java.awt.Dimension(1040, 666));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnEliminarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEliminarActionPerformed
        if(jtableRegistros.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null,"Debe seleccionar una fila para editar","No selecciono Fila",JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                raf.borrar(registros.get(jtableRegistros.getSelectedRow()).getCodigo());
                modelo = (DefaultTableModel) jtableRegistros.getModel();
                modelo.setRowCount(0);
                jtableRegistros.setModel(modelo);
                modelo = (DefaultTableModel) jtableRegistros.getModel();
                registros = raf.vertodo();
                for (int i = 0; i < registros.size(); i++) {
                    modelo.addRow(new Object[]{registros.get(i).getCodigo(),
                        registros.get(i).getPersonaDifunto().getNombres(),
                        registros.get(i).getPersonaDifunto().getApellidos(),
                        registros.get(i).getPersonaDifunto().getNoCedula(),
                        registros.get(i).getPersonaDifunto().getFechaDefuncion(),
                        registros.get(i).getPersonaResponsable().getNombres(),
                        registros.get(i).getPersonaResponsable().getApellidos(),
                        registros.get(i).getPersonaResponsable().getNoCedula(),
                        registros.get(i).getTierra().getCodigo(),
                        registros.get(i).getTierra().getPagoSepultura()});

                }

                jtableRegistros.setModel(modelo);
            } catch (IOException ex) {
                Logger.getLogger(DialogVerRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnEliminarActionPerformed

    private void btnSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalirActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnSalirActionPerformed

    
    private String limit(String text, int size) {
        StringBuilder buffer;
        if (text == null) {
            buffer = new StringBuilder(size);
        } else {
            buffer = new StringBuilder(text);
            buffer.setLength(size);
        }
        return buffer.toString();
    }
    
    private void btnActualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnActualizarActionPerformed
        if(jtableRegistros.getSelectedRow()==-1){
            JOptionPane.showMessageDialog(null,"Debe seleccionar una fila para editar","No selecciono Fila",JOptionPane.ERROR_MESSAGE);
        }else{
            try {
                System.out.println(jtableRegistros.getSelectedRow());
                DialogNuevoRegistro actualizar = new DialogNuevoRegistro((JFrame)this.getParent(),true);
                actualizar.MostrarInfo(jtableRegistros.getSelectedRow());
                actualizar.setVisible(true);
                
                modelo = (DefaultTableModel) jtableRegistros.getModel();
                modelo.setRowCount(0);
                jtableRegistros.setModel(modelo);
                modelo = (DefaultTableModel) jtableRegistros.getModel();
                registros = raf.vertodo();
                for (int i = 0; i < registros.size(); i++) {
                    modelo.addRow(new Object[]{registros.get(i).getCodigo(),
                        registros.get(i).getPersonaDifunto().getNombres(),
                        registros.get(i).getPersonaDifunto().getApellidos(),
                        registros.get(i).getPersonaDifunto().getNoCedula(),
                        registros.get(i).getPersonaDifunto().getFechaDefuncion(),
                        registros.get(i).getPersonaResponsable().getNombres(),
                        registros.get(i).getPersonaResponsable().getApellidos(),
                        registros.get(i).getPersonaResponsable().getNoCedula(),
                        registros.get(i).getTierra().getCodigo(),
                        registros.get(i).getTierra().getPagoSepultura()});

                }

                jtableRegistros.setModel(modelo);

                
            } catch (IOException ex) {
                Logger.getLogger(DialogVerRegistro.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btnActualizarActionPerformed

    private void btnGuardarRegistros1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGuardarRegistros1ActionPerformed
        JFileChooser selectorCarpeta = new JFileChooser();
        selectorCarpeta.setDialogTitle("Seleccione la carpeta donde desea guardar los registros");
        selectorCarpeta.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        selectorCarpeta.setAcceptAllFileFilterUsed(false);
        
        if(selectorCarpeta.showOpenDialog(this) == JFileChooser.APPROVE_OPTION){
            //File carpetaSeleccionada = selectorCarpeta.getCurrentDirectory();
            File carpetaSeleccionada = selectorCarpeta.getSelectedFile();
            File archivo = new File(carpetaSeleccionada.getAbsolutePath() + File.separator +"Cementerio.txt");
            
            try (FileWriter fw = new FileWriter(archivo)) {

                for(Registro r: registros){
                
                //No se porque se desordeno
                //Luego vemos porque se desordeno sigue trabajando
                fw.write(limit(r.getCodigo(),12) + "\n");
                fw.write(limit(r.getFechaRegistro(),10)+ "\n");
                fw.write(limit(r.getPersonaDifunto().getNombres(),30)+ "\n");
                fw.write(limit(r.getPersonaDifunto().getApellidos(),30)+ "\n");
                fw.write(limit(r.getPersonaDifunto().getNoCedula(),16)+ "\n");
                fw.write(limit(r.getPersonaDifunto().getFechaDefuncion(),10)+ "\n");
                fw.write(limit(r.getPersonaResponsable().getNombres(),30)+ "\n");
                fw.write(limit(r.getPersonaResponsable().getApellidos(),30)+ "\n");
                fw.write(limit(r.getPersonaResponsable().getNoCedula(),16)+ "\n");
                fw.write(limit(r.getPersonaResponsable().getDireccion(),100)+ "\n");
                fw.write(limit(r.getTierra().getCodigo(),12)+ "\n");
                fw.write(r.getTierra().getPagoTerreno()+ "\n");
                fw.write(r.getTierra().getPagoSepultura()+ "\n");
                fw.write("\n\n\n");
                fw.write(r.getCodigo());
                }

            } catch (IOException e1) {
                e1.printStackTrace();
            }
            
            
        }
    }//GEN-LAST:event_btnGuardarRegistros1ActionPerformed

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        /*try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DialogVerRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DialogVerRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DialogVerRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DialogVerRegistro.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }*/
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        //java.awt.EventQueue.invokeLater(new Runnable() {
            //public void run() {
                //try {
                    //DialogVerRegistro dialog = new DialogVerRegistro(new javax.swing.JFrame(), true);
                    //dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                        //@Override
                        //public void windowClosing(java.awt.event.WindowEvent e) {
                            //System.exit(0);
                        //}
                    //});
                    //dialog.setVisible(true);
                //} catch (IOException ex) {
                   // Logger.getLogger(DialogVerRegistro.class.getName()).log(Level.SEVERE, null, ex);
               // }
            //}
       // });
   // }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnActualizar;
    private javax.swing.JButton btnEliminar;
    private javax.swing.JButton btnGuardarRegistros1;
    private javax.swing.JButton btnSalir;
    private javax.swing.JCheckBoxMenuItem jCheckBoxMenuItem1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jtableRegistros;
    // End of variables declaration//GEN-END:variables
}
